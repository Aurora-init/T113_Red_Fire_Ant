###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               26/Mar/2023  16:31:30
# Copyright 2004-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        & 光照度采集系统\ZigBee设备端固件与源码\源码\Applications\zb_msg.c
#    Command line       =  
#        -f C:\Users\11148\AppData\Local\Temp\EWDCE3.tmp
#        ("D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        & 光照度采集系统\ZigBee设备端固件与源码\源码\Applications\zb_msg.c" -D
#        SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xZTOOL_P1 -D
#        xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
#        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF -D ZCL_GROUPS -D
#        ZCL_LEVEL_CTRL -D HAL_KEY=FALSE -D xISR_KEYINTERRUPT -D HAL_UART=TRUE
#        -D INT_HEAP_LEN=2048 -D HAL_LCD=TRUE -D HAL_LCD_OLED12864=TRUE -D
#        HAL_ADC=TRUE -D HAL_DHT11=TRUE -lC
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Category\Router\List"
#        -lA
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Category\Router\List"
#        --diag_suppress Pe001,Pa010 -o
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Category\Router\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Tools\f8wRouter.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Tools\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x0402
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x5a, 0x69, 0x67, 0x42,
#        0x65,0x65, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x30,
#        0x39}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
#        -DENABLE_LED4_DISABLE_S1) -f
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Tools\f8wZCL.cfg"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        & 光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\" -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\hal\include\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\hal\target\CC2530EB\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\hal\userspace\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\mac\include\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\mac\high_level\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\mac\low_level\srf04\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\mt\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\osal\include\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\services\saddr\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\services\sdata\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\af\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\bdb\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\gp\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\nwk\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\sapi\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\sec\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\sys\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\zcl\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\stack\zdo\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\zmac\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Components\zmac\f8w\"
#        -I
#        "D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\..\..\Applications\"
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_China.936
#    List file          =  
#        D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Category\Router\List\zb_msg.lst
#    Object file        =  
#        D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度
#        &
#        光照度采集系统\ZigBee设备端固件与源码\源码\Projects\CC2530\Category\Router\Obj\zb_msg.r51
#
###############################################################################

D:\桌面\《ZigBee3.0开发指南》配套资源（附加部分）\课外篇：项目实战\基于Zigbee的温湿度 & 光照度采集系统\ZigBee设备端固件与源码\源码\Applications\zb_msg.c
      1          #include "zb_msg.h"
      2          
      3          #include "hal_uart.h"
      4          #include "OnBoard.h"
      5          
      6          #include <string.h>
      7          
      8          /* Buffer size. */
      9          #define ZB_MSG_RXBUF_MAX             (MT_UART_RX_BUFF_MAX + 32)
     10          #define ZB_MSG_TXBUF_MAX             (MT_UART_TX_BUFF_MAX + 32)
     11          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     12          static void (*zb_msg_receiver)(const uint8_t *, uint8_t) = 0;
   \                     zb_msg_receiver:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     13          
     14          static void zb_msg_init(void);
     15          static int zb_msg_send(const uint8_t *payload, uint8_t size);
     16          static void zb_msg_set_receiver(void (*receiver)(const uint8_t *payload, uint8_t size));
     17          static void zb_msg_incoming(uint8_t port, uint8_t event);
     18          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     19          const zb_msg_t *zbmsg_ = &(const zb_msg_t){
   \                     zbmsg_:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for zbmsg_>`
   \   000002                REQUIRE __INIT_XDATA_I
     20              .init = zb_msg_init,
     21              .send = zb_msg_send,
     22              .set_receiver = zb_msg_set_receiver,
     23          };
     24          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     25          void zb_msg_init()
   \                     zb_msg_init:
     26          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV       A,#-0x1d
   \   000006   12....       LCALL     ?ALLOC_XSTACK8
     27          	halUARTCfg_t config = {
     28                  .configured = TRUE,
     29                  .baudRate = HAL_UART_BR_9600,
     30                  .flowControl = FALSE,
     31                  .flowControlThreshold = 0,
     32                  .rx.maxBufSize = ZB_MSG_RXBUF_MAX,
     33                  .tx.maxBufSize = ZB_MSG_TXBUF_MAX,
     34                  .idleTimeout = MT_UART_IDLE_TIMEOUT,
     35                  .intEnable = TRUE,
     36                  .callBackFunc = zb_msg_incoming,
     37              };
   \   000009   90....       MOV       DPTR,#`?<Constant {1, 0, 0, 0, 6, {0, 0, 160}, {0, 0,`
   \   00000C   AC..         MOV       R4,?XSP + 0
   \   00000E   AD..         MOV       R5,?XSP + 1
   \   000010   741D         MOV       A,#0x1d
   \   000012   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
     38          
     39              HalUARTOpen(HAL_UART_PORT_0, &config);
   \   000015                ; Setup parameters for call to function HalUARTOpen
   \   000015   AA..         MOV       R2,?XSP + 0
   \   000017   AB..         MOV       R3,?XSP + 1
   \   000019   F9           MOV       R1,A
   \   00001A   12....       LCALL     `??HalUARTOpen::?relay`; Banked call to: HalUARTOpen
     40          }
   \   00001D   741D         MOV       A,#0x1d
   \   00001F   12....       LCALL     ?DEALLOC_XSTACK8
   \   000022                REQUIRE ?Subroutine0
   \   000022                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP       DPH
   \   000002   D082         POP       DPL
   \   000004   02....       LJMP      ?BRET

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {1, 0, 0, 0, 6, {0, 0, 160}, {0, 0,`:
   \   000000   01           DB 1
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   0000         DW 0
   \   000005   06           DB 6
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   A000         DW 160
   \   00000C   0000         DB 0, 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
   \   000012   A000         DW 160
   \   000014   0000         DB 0, 0
   \   000016   01           DB 1
   \   000017   00000000     DD 0
   \   00001B   ....         DW `??zb_msg_incoming::?relay`
     41          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     42          int zb_msg_send(const uint8_t *payload, uint8_t size)
   \                     zb_msg_send:
     43          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
     44              HalUARTWrite(HAL_UART_PORT_0, (uint8_t *)payload, size);
   \   000006                ; Setup parameters for call to function HalUARTWrite
   \   000006   FC           MOV       R4,A
   \   000007   7D00         MOV       R5,#0x0
   \   000009   7900         MOV       R1,#0x0
   \   00000B   12....       LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
     45          
     46              return 0;
   \   00000E   7A00         MOV       R2,#0x0
   \   000010   7B00         MOV       R3,#0x0
   \   000012                REQUIRE ?Subroutine1
   \   000012                ; // Fall through to label ?Subroutine1
     47          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F01         MOV       R7,#0x1
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
     48          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     49          void zb_msg_set_receiver(void (*receiver)(const uint8_t *, uint8_t))
   \                     zb_msg_set_receiver:
     50          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     51              zb_msg_receiver = receiver;
   \   000004   90....       MOV       DPTR,#zb_msg_receiver
   \   000007   EA           MOV       A,R2
   \   000008   F0           MOVX      @DPTR,A
   \   000009   A3           INC       DPTR
   \   00000A   EB           MOV       A,R3
   \   00000B   F0           MOVX      @DPTR,A
     52          }
   \   00000C   80..         SJMP      ?Subroutine0
     53          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     54          void zb_msg_incoming(uint8_t port, uint8_t event)
   \                     zb_msg_incoming:
     55          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     56              static uint8_t rxbuf[ZB_MSG_RXBUF_MAX] = { 0 };
     57          
     58              uint8_t len = Hal_UART_RxBufLen(HAL_UART_PORT_0);
   \   000005                ; Setup parameters for call to function Hal_UART_RxBufLen
   \   000005   7900         MOV       R1,#0x0
   \   000007   12....       LCALL     `??Hal_UART_RxBufLen::?relay`; Banked call to: Hal_UART_RxBufLen
   \   00000A   EA           MOV       A,R2
   \   00000B   FE           MOV       R6,A
     59          
     60              if (len == 0) return;
   \   00000C   6026         JZ        ??zb_msg_incoming_0
     61          
     62              HalUARTRead(HAL_UART_PORT_0, rxbuf, len);
   \   00000E                ; Setup parameters for call to function HalUARTRead
   \   00000E   FC           MOV       R4,A
   \   00000F   7D00         MOV       R5,#0x0
   \   000011   7A..         MOV       R2,#??rxbuf & 0xff
   \   000013   7B..         MOV       R3,#(??rxbuf >> 8) & 0xff
   \   000015   7900         MOV       R1,#0x0
   \   000017   12....       LCALL     `??HalUARTRead::?relay`; Banked call to: HalUARTRead
     63          
     64              if (zb_msg_receiver == 0) return;
   \   00001A   90....       MOV       DPTR,#zb_msg_receiver
   \   00001D   E0           MOVX      A,@DPTR
   \   00001E   F8           MOV       R0,A
   \   00001F   A3           INC       DPTR
   \   000020   E0           MOVX      A,@DPTR
   \   000021   F9           MOV       R1,A
   \   000022   E8           MOV       A,R0
   \   000023   49           ORL       A,R1
   \   000024   600E         JZ        ??zb_msg_incoming_0
     65          
     66              zb_msg_receiver(rxbuf, len);
   \   000026                ; Setup parameters for indirect call
   \   000026   EE           MOV       A,R6
   \   000027   F9           MOV       R1,A
   \   000028   7A..         MOV       R2,#??rxbuf & 0xff
   \   00002A   7B..         MOV       R3,#(??rxbuf >> 8) & 0xff
   \   00002C   E0           MOVX      A,@DPTR
   \   00002D   F583         MOV       DPH,A
   \   00002F   8882         MOV       DPL,R0
   \   000031   12....       LCALL     ?CALL_IND
     67          }
   \                     ??zb_msg_incoming_0:
   \   000034   80..         SJMP      ?Subroutine1

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??rxbuf:
   \   000000                DS 160
   \   0000A0                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zbmsg_>`:
   \   000000   ....         DW ?_0

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zb_msg_init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_msg_init

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zb_msg_send::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_msg_send

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zb_msg_set_receiver::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_msg_set_receiver

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zb_msg_incoming::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_msg_incoming

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0      9   zb_msg_incoming
        0      9   -> HalUARTRead
        0      9   -> Hal_UART_RxBufLen
      2     29   zb_msg_init
        2     29   -> HalUARTOpen
      0      9   zb_msg_send
        0      9   -> HalUARTWrite
      2      0   zb_msg_set_receiver


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      29  ?<Constant {1, 0, 0, 0, 6, {0, 0, 160}, {0, 0,
       2  ?<Initializer for zbmsg_>
       7  ?Subroutine0
       5  ?Subroutine1
     160  rxbuf
      54  zb_msg_incoming
       6  zb_msg_incoming::?relay
      34  zb_msg_init
       6  zb_msg_init::?relay
       2  zb_msg_receiver
      18  zb_msg_send
       6  zb_msg_send::?relay
      14  zb_msg_set_receiver
       6  zb_msg_set_receiver::?relay
       2  zbmsg_
       6  -- Other

 
 132 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   2 bytes in segment XDATA_I
   2 bytes in segment XDATA_ID
  35 bytes in segment XDATA_ROM_C
 162 bytes in segment XDATA_Z
 
  26 bytes of CODE     memory
  35 bytes of CONST    memory
 132 bytes of HUGECODE memory
 164 bytes of XDATA    memory

Errors: none
Warnings: none
